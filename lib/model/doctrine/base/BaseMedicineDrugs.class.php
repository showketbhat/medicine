<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MedicineDrugs', 'doctrine');

/**
 * BaseMedicineDrugs
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $drug_id
 * @property string $type
 * @property string $company
 * @property string $logo
 * @property string $url
 * @property string $description
 * @property string $price
 * @property integer $instock
 * @property timestamp $expires_at
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * 
 * @method integer       getId()          Returns the current record's "id" value
 * @method integer       getDrugId()      Returns the current record's "drug_id" value
 * @method string        getType()        Returns the current record's "type" value
 * @method string        getCompany()     Returns the current record's "company" value
 * @method string        getLogo()        Returns the current record's "logo" value
 * @method string        getUrl()         Returns the current record's "url" value
 * @method string        getDescription() Returns the current record's "description" value
 * @method string        getPrice()       Returns the current record's "price" value
 * @method integer       getInstock()     Returns the current record's "instock" value
 * @method timestamp     getExpiresAt()   Returns the current record's "expires_at" value
 * @method timestamp     getCreatedAt()   Returns the current record's "created_at" value
 * @method timestamp     getUpdatedAt()   Returns the current record's "updated_at" value
 * @method MedicineDrugs setId()          Sets the current record's "id" value
 * @method MedicineDrugs setDrugId()      Sets the current record's "drug_id" value
 * @method MedicineDrugs setType()        Sets the current record's "type" value
 * @method MedicineDrugs setCompany()     Sets the current record's "company" value
 * @method MedicineDrugs setLogo()        Sets the current record's "logo" value
 * @method MedicineDrugs setUrl()         Sets the current record's "url" value
 * @method MedicineDrugs setDescription() Sets the current record's "description" value
 * @method MedicineDrugs setPrice()       Sets the current record's "price" value
 * @method MedicineDrugs setInstock()     Sets the current record's "instock" value
 * @method MedicineDrugs setExpiresAt()   Sets the current record's "expires_at" value
 * @method MedicineDrugs setCreatedAt()   Sets the current record's "created_at" value
 * @method MedicineDrugs setUpdatedAt()   Sets the current record's "updated_at" value
 * 
 * @package    medicine
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMedicineDrugs extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('medicine_drugs');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('drug_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('type', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('company', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('logo', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('price', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('instock', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('expires_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}